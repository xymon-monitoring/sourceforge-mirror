.TH HOBBITD_LARRD 8 "Version 4.0.2: 10 apr 2005" "Hobbit Monitor"
.SH NAME
hobbitd_larrd \- hobbitd worker module for updating Hobbit RRD files
.SH SYNOPSIS
.B "hobbitd_channel --channel=status hobbitd_larrd [options]"
.br
.B "hobbitd_channel --channel=data hobbitd_larrd [options]"

.SH DESCRIPTION
hobbitd_larrd is a worker module for hobbitd, and as such it is normally
run via the
.I hobbitd_channel(8)
program. It receives "status" and "data" messages from hobbitd via
stdin, and updates the RRD graphs so you no longer need to bother
with installing LARRD on your BBDISPLAY server. It also eliminates
the need to store all status- and data-messages to disk, which is
necessary with the standard LARRD setup.

LARRD can send data to Big Brother using both status- and data-
messages. So you will normally run two instances of this module, 
once for the "status" channel and once for the "data" channel.

Note: Some of the data collected by hobbitd_larrd is not compatible with
the RRD files generated by the Big Brother LARRD add-on. See the
COMPATIBILITY section below.


.SH OPTIONS
.IP "--debug"
Enable debugging output.

.IP "--rrddir=DIRECTORY"
Defines the directory where the LARRD RRD-files are stored. hobbitd_larrd
will use the location pointed to by the BBRRDS environment if this
option is not present.

.IP "--extra-script=FILENAME"
Defines the script that is run to get the RRD data for tests that are not
built into hobbitd_larrd. You must also specify which tests are handled
by the external script in the \fB--extra-tests\fR option. This option
can only be given once, so the script must handle all of the external
test-data. See the CUSTOM RRD DATA section below.

.IP "--extra-tests=TEST[,TEST]"
List of testnames that are handled by the external script. See the
CUSTOM RRD DATA section below.

.SH ENVIRONMENT
.IP LARRDS
Defines the mapping between a status-log columnname and the corresponding
RRD database format. This is normally defined in the 
.I hobbitserver.cfg(5)
file.

.IP BBRRDS
Default directory where LARRD RRD files are stored.


.SH COLLECTED DATA
The following RRD-file datasets are generated by hobbitd_larrd:

.IP la
Records the CPU load average. Data is collected from the "cpu"
status report. Requires that a Hobbit or BB client is running
on the monitored server.

.IP disk
Records the disk utilization. Data is collected from the "disk"
status report. Requires that a Hobbit or BB client is running
on the monitored server.

.IP memory
Records memory- and swap-utilization. Data is collected from the
"memory" status report. If no "memory" status is reported, it will
use the data from the Win32 client "cpu" status report to generate
this dataset. Requires that a Hobbit or BB client is running
on the monitored server.

.IP netstat
Records TCP and UDP statistics. Data is collected from the "netstat"
status report; however, this data is often sent via the Hobbit
"data" protocol, so there need not be a "netstat" column visible
on the Hobbit display. To get these data, the LARRD netstat back-end 
script must be running on the monitored server.

.IP vmstat
Records system performance metrics from the "vmstat" command.
Data is collected from the "vmstat" status report; however, this 
data is often sent via the Hobbit "data" protocol, so there need 
not be a "vmstat" column visible on the Hobbit display. To get 
these data, the LARRD vmstat back-end script must be running on
the monitored server.

.IP tcp
Response-time metrics from all of the Hobbit network tests are
recorded in the "tcp" RRD.

.IP apache
Apache server performance metrics, taken from the "apache" data
report. See the description of the \fBapache\fR keyword in 
.I bb-hosts(5)
for details.

.IP sendmail
Sendmail server performance metrics, taken from the "mailstats"
output. To get these data, the LARRD sendmail back-end script must
be running on the monitored server.

.IP mailq
Mail queue size. To get these data, the LARRD nmailq back-end script
must be running on the monitored server.

.IP bea
BEA Weblogic performance data. This is an experimental set of data
collected using SNMP, by the "bea-snmpstats.sh" script included with
Hobbit.

.IP iishealth
IIS webserver performance data, collected by the "iishealth" script.
This script is an add-on to the BB client, and must be running on
the monitored webserver.

.IP temperature
Temperature data, collected with the temperature script from
www.deadcat.net. To get these data, the temperature script must
be running on the monitored server.

.IP ntpstat
Tracks the deviation between the local system time and an NTP
server, using the output from the "ntpq" and "ntpdc" commands.
To get these data, your server must be running an NTP daemon,
and the LARRD "ntpstat" add-on script must be installed in the
BB client.


.SH CUSTOM RRD DATA
hobbitd_larrd provides a simple mechanism for adding custom graphs
to the set of data collected on your Hobbit server. By adding the
"--extra-script" and "--extra-tests" options, data reported to Hobbit
from selected tests are passed to an external script, which can 
define the RRD data-sets to store in an RRD file.

\fBNOTE:\fR For performance reasons, you should not use this mechanism
for large amounts of data. The overhead involved in storing the received
message to disk and launching the script is significantly larger than
the normal hobbitd_larrd overhead. So if you have a large number of
reports for a given test, you should consider implementing it in C
and including it in the hobbitd_larrd tool.

Apart from writing the script, You must also add a section to
.I hobbitgraph.cfg(5)
so that
.I hobbitgraph.cgi(1)
knows how to generate the graph from the data stored in the RRD file. 
To make the graphs actually show up on the status-page and/or the
"trends" page, add the name of the new graph to the LARRDS and/or 
GRAPHS setting in
.I hobbitserver.cfg(5).

The script is invoked for each message that arrives, where the test-name
matches one of the testnames given in the "--extra-tests" option. The
script receives three commandline parameters:

.TP
.BI "Hostname"
The name of the host reporting the data.
.TP
.BI "Testname"
The name of the test being reported.
.TP
.BI "Filename"
File containing the data that was reported. This file is generated for
you by hobbitd_larrd, and is also deleted automatically after your script
is finished with it.

.LP
The script must process the data that is reported, and generate the following
output:

.TP
.BI "RRD data-set definitions"
For each dataset that the RRD file holds, a line beginning with "DS:" must be
output.  If multiple data-sets are used, print one line for each dataset.
.br
Data-set definitions are described in the
.I rrdcreate(1)
documentation, but a common definition for e.g. tracking the number of users 
logged on would be "DS:users:GAUGE:600:0:U". "users" is the name of the dataset,
"GAUGE" is the datatype, "600" is the longest time allowed between updates for
the data to be valid, "0" is the minimum value, and "U" is the maximum value
(a "U" means "unknown"). 
.TP
.BI "RRD filename"
The name of the RRD file where the data is stored. Note that Hobbit stores all
RRD files in host-specific directories, so unlike LARRD you should not include
the hostname in the name of the RRD file.
.TP
.BI "RRD values"
One line, with all of the data values collected by the script. Data-items are
colon-delimited and must appear in the same sequence as your data-set definitions, 
e.g. if your RRD has two datasets with the values "5" and "0.4" respectively, 
then the script must output "5:0.4" as the RRD values.
.br
In some cases it may be useful to define a dataset even though you will not
always have data for it. In that case, use "U" (unknown) for the value.

If you want to store the data in multiple RRD files, the script can just print out
more sequences of data-set definitions, RRD filenames and RRD values. If the
data-set definitions are identical to the previous definition, you need not
print the data-set definitions again - just print a new RRD filename and value.

.LP
The following sample script for tracking weather data shows how to use this 
mechanism. It assumes the status message include lines like these:
.IP
.nf
green Weather in Copenhagen is FAIR

Temperature: 21 degrees Celsius
Wind: 4 m/s
Humidity: 72 %
.fi
.LP
A shell-script to track all of these variables could be written like this:
.IP
.nf
#!/bin/sh

# Input parameters: Hostname, testname (column), and messagefile
HOSTNAME="$1"
TESTNAME="$2"
FNAME="$3"

if [ "$TESTNAME" = "weather" ]
then
	# Analyze the message we got
	TEMP=`grep "^Temperature:" $FNAME | awk '{print $2}'
	WIND=`grep "^Wind:" $FNAME | awk '{print $2}'
	HMTY=`grep "^Humidity:" $FNAME | awk '{print $2}'

	# The RRD dataset definitions
	echo "DS:temperature:GAUGE:600:-30:50"
	echo "DS:wind:GAUGE:600:0:U"
	echo "DS:humidity:GAUGE:600:0:100"

	# The filename
	echo "weather.rrd"

	# The data
	echo "$TEMP:$WIND:$HMTY"
fi

exit 0
.fi


.SH COMPATIBILITY

Some of the RRD files generated by hobbitd_larrd are incompatible with
the files generated by the Big Brother LARRD add-on:

.IP vmstat
The vmstat files with data from Linux based systems are incompatible
due to the addition of a number of new data-items that LARRD 0.43
do not collect, but hobbitd_larrd does. This is due to changes in the
output from the Linux vmstat command, and changes in the way e.g. 
system load metrics are reported.

.IP netstat
All netstat files from LARRD 0.43 are incompatible with hobbitd_larrd.
The netstat data collected by LARRD is quite confusing: For some types
of systems LARRD collects packet-counts, for others it collects byte-
counts. hobbitd_larrd uses a different RRD file-format with separate
counters for packets and bytes and tracks whatever data the system is
reporting.


.SH "SEE ALSO"
hobbitd_channel(8), hobbitd(8), hobbitserver.cfg(5), hobbit(7)

