.TH XYMOND_CHANNEL 8 "Version 4.3.22-rc2:  2 Nov 2015" "Xymon"
.SH NAME
xymond_channel \- Feed a xymond channel to a worker module
.SH SYNOPSIS
.B "xymond_channel --channel=CHANNEL [options] workerprogram [worker-options]"
.B "xymond_channel --channel=CHANNEL [options] --multilocal workerprogram [workerprogram2 workerprogram3 ...]"

.SH DESCRIPTION
xymond_channel hooks into one of the 
.I xymond(8)
channels that provide information about events occurring in the Xymon system.
It retrieves messages from the xymond daemon, and passes them on to the
\fBworkerprogram\fR on the STDIN (file descripter 1) of the worker program. 
Worker programs can then handle messages as they like.

A number of worker programs are shipped with xymond, e.g.
.I xymond_filestore(8)
.I xymond_history(8)
.I xymond_alert(8)
.I xymond_rrd(8)

If you want to write your own worker module, a sample worker module
is provided as part of the xymond distribution in the xymond_sample.c
file. This illustrates how to easily fetch and parse messages.

.SH OPTIONS
xymond_channel accepts a few options.

.IP "--channel=CHANNELNAME"
Specifies the channel to receive messages from, only one channel can be used.
This option is required. The following channels are available:
.br
"status" receives all Xymon status- and summary-messages
.br
"stachg" receives information about status changes
.br
"page" receives information about statuses triggering alerts
.br
"data" receives all Xymon "data" messages
.br
"notes" receives all Xymon "notes" messages
.br
"enadis" receives information about hosts being disabled or enabled.

.IP "--filter=EXPRESSION"
EXPRESSION is a Perl-compatible regular expression. xymond_channel will match 
each message against this expression, and silently drops any message that does 
NOT match the expression. Especially useful for custom worker modules and during 
testing, to limit the amount of data that the module must process.
.br

.IP "--metafilter=EXPRESSION"
Same as above, but only matches the header line on the channel itself instead
of the entire message body.
.br

.IP "--exfilter=EXPRESSION"
EXPRESSION is a Perl-compatible regular expression. xymond_channel will match
each message against this expression, and silently drops any message that matches.
.br

.IP "--metaexfilter=EXPRESSION"
Same as above, but only matches the header line on the channel itself instead
of the entire message body.
.br

Note that messages for "logrotate", "shutdown", "drophost", "renamehost",
"droptest" and "renametest" are ALWAYS forwarded by xymond_channel, whether or 
not they match any of the above filters.

Note that if --filter or --metafilter are specified, any message which does NOT
pass those matches will be REJECTED. (The presence of --exfilter or --metaexfilter 
alone does not cause this type of "default denial.")

.IP "--msgtimeout=TIMEOUT"
Modify the default timeout (30 seconds) for the worker module to handle a message.
If a message is not handled within this time, it is considered lost. You normally
do not have to modify this unless you have an extremely busy server.

.IP "--initialdelay=SECONDS"
Give worker module a certain length of time to initialize before xymond_channel
begins sending it messages. Note that this only occurs on the initial startup. If
the worker module dies and must be re-launched by xymond_channel, it will begin
receiving messages immediately. You normally don't need to set this. 
(Default: no delay)

.IP "--multirun=N"
xymond_channel will launch N copies of the local worker and send the message to 
whichever copy has the least number of messages in its queue. This allows you
to spread out load if that worker cannot individually keep up with the
incoming message load. If N is absent, implies --multilocal (below), which
allows you to specify individual executable names to rotate through.
(Default: off)

.IP "--multilocal"
xymond_channel normally executes a single local program, passing any subsequent
arguments on to that program. In --multilocal mode, xymond_channel will launch
multiple local programs and feed messages to them simultaneously. Note that 
because each argument is considered its own executable, none of the programs
may be given arguments of their own. If you need to specify arguments, use a
shell wrapper as the command(s) xymond_channel is launching.

.IP "--daemon"
xymond_channel is normally started by 
.I xymonlaunch(8)
as a task defined in the
.I tasks.cfg(5)
file. If you are not using xymonlaunch, then starting xymond_channel with this
option causes it to run as a stand-alone background task.

.IP "--pidfile=FILENAME"
If running as a stand-alone daemon, xymond_channel will save the process-ID 
of the daemon in FILENAME. This is useful for automated startup- and shutdown-
scripts.

.IP "--env=FILENAME"
Loads the environment variables defined in FILENAME before starting xymond_channel.
This is normally used only when running as a stand-alone daemon; if xymond_channel
is started by xymonlaunch, then the environment is controlled by the task definition 
in the
.I tasks.cfg(5)
file.

.IP "--log=FILENAME"
Redirect output to this log-file.

.IP "--md5 / --no-md5"
Enable/disable checksumming of messages passed from xymond_channel to the worker
module. This may be useful if you suspect that data may be corrupted, e.g. when
sent to a remote worker module. Note that enabling this may break communication
with old versions of Xymon worker modules. Default: Disabled.

.IP "--debug"
Enable debugging output.

.SH FILES
This program does not use any configuration files.

.SH "SEE ALSO"
xymond(8), xymon(7)

